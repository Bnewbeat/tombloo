<?xml version="1.0"?>
<?xml-stylesheet href="chrome://global/skin/" type="text/css" ?>
<?xml-stylesheet href="data:text/css,
textbox[readonly=true] {
	-moz-appearance : none;
	-moz-user-focus : ignore !important;
	-moz-border-bottom-colors : transparent;
	-moz-border-left-colors : transparent;
	-moz-border-right-colors : transparent;
	-moz-border-top-colors : transparent;
}
tab {
	padding : 0.4em 0.8em 0.1em 0.8em;
}
tabpanel {
	padding : 1.2em 0.7em;
}
checkbox, radio, button, tab {
	cursor : pointer;
}

checkbox:focus > .checkbox-label-box {
  border: none !important;
}
" type="text/css"?>

<!DOCTYPE prefwindow SYSTEM "chrome://tombloo/locale/tombloo.dtd" >

<prefwindow 
	style="width: 50em;" 
	xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul" 
	title="&label.tomblooOptions;" >
	
	<prefpane flex="1" id="main">
		<preferences>
			<preference 
				id="trimReblogInfo" 
				name="extensions.tombloo.trimReblogInfo" 
				type="bool"/>
			<preference 
				id="amazonAffiliateId" 
				name="extensions.tombloo.amazonAffiliateId" 
				type="string"/>
			<preference 
				id="thumbnailTemplate" 
				name="extensions.tombloo.thumbnailTemplate" 
				type="string"/>
			<preference 
				id="ignoreError" 
				name="extensions.tombloo.ignoreError" 
				type="string"/>
			<preference 
				id="accesskey.share" 
				name="extensions.tombloo.accesskey.share" 
				type="string"/>
			<preference 
				id="shortcutkey.quickPost.link" 
				name="extensions.tombloo.shortcutkey.quickPost.link" 
				type="string"/>
			<preference 
				id="shortcutkey.quickPost.regular" 
				name="extensions.tombloo.shortcutkey.quickPost.regular" 
				type="string"/>
			<preference 
				id="shortcutkey.checkAndPost" 
				name="extensions.tombloo.shortcutkey.checkAndPost" 
				type="string"/>
			<preference 
				id="tagProvider" 
				name="extensions.tombloo.tagProvider" 
				type="string"/>
			<preference 
				id="tagAutoComplete" 
				name="extensions.tombloo.tagAutoComplete" 
				type="bool"/>
			<preference 
				id="dataDir" 
				name="extensions.tombloo.dataDir" 
				type="string"/>
		</preferences>
		
		<vbox flex="1">
			<tabbox flex="1">
				<tabs>
					<tab label="&label.postConfig;"/>
					<tab label="&label.post;"/>
					<tab label="&label.entry;"/>
				</tabs>
				<tabpanels flex="1">
					<tabpanel>
						<grid flex="1">
							<columns>
								<column/>
								<column/>
								<column/>
								<column/>
								<column/>
								<column/>
								<column/>
								<column/>
								<column/>
							</columns>
							<rows id="posters">
								<row>
									<spacer />
									<label value="Text"/>
									<label value="Photo"/>
									<label value="Quote"/>
									<label value="Link"/>
									<label value="Video"/>
									<label value="Chat"/>
									<label value="Reblog"/>
								</row>
							</rows>
						</grid>
					</tabpanel>
					<tabpanel>
						<grid flex="1">
							<columns>
								<column pack="end" align="end"/>
								<column flex="1"/>
							</columns>
							<rows>
								<row align="center">
									<label value="&label.accesskey.share;"/>
									<hbox>
										<textbox preference="accesskey.share" maxlength="1" size="3" />
									</hbox>
								</row>
								<separator class="groove-thin" width="1" style="margin: 0.6em 0 1.5em 0;" />
								<row align="center">
									<label value="&label.shortcutkey.quickPost.regular;" />
									<hbox>
										<textbox preference="shortcutkey.quickPost.regular" size="35"/>
									</hbox>
								</row>
								<row align="center">
									<label value="&label.shortcutkey.quickPost.link;" />
									<hbox>
										<textbox preference="shortcutkey.quickPost.link" size="35"/>
									</hbox>
								</row>
								<row align="center">
									<label value="&label.shortcutkey.checkAndPost;" />
									<hbox>
										<textbox preference="shortcutkey.checkAndPost" size="35"/>
									</hbox>
								</row>
								<row align="center" style="margin-top: 0.6em;">
									<label value="&label.tagProvider;" />
									<radiogroup preference="tagProvider" />
								</row>
								<row align="center" style="margin: 0.4em 0 0.5em 0;">
									<label value="&label.tagAutoComplete;" />
									<checkbox preference="tagAutoComplete" />
								</row>
								<separator class="groove-thin" width="1" style="margin: 0.6em 0 1.5em 0;" />
								<row align="center">
									<label value="&label.ignoreError;"/>
									<textbox preference="ignoreError" />
								</row>
								<row align="center" style="margin-top: -0.3em;">
									<spacer />
									<textbox readonly="true" value="&label.example; (ffffound: (?!auth)|already)" />
								</row>
							</rows>
						</grid>
					</tabpanel>
					<tabpanel>
						<grid flex="1">
							<columns>
								<column pack="end" align="end" orient="horizontal"/>
								<column flex="1"/>
							</columns>
							<rows>
								<row align="center">
									<label value="&label.amazonAffiliateId;"/>
									<hbox>
										<textbox preference="amazonAffiliateId" size="35" />
									</hbox>
								</row>
								<row align="center">
									<label value="&label.thumbnailTemplate;"/>
									<textbox preference="thumbnailTemplate" />
								</row>
								<row align="center" style="margin-top: -0.3em;">
									<spacer />
									<textbox readonly="true" value="&label.example; &lt;img src=&quot;http://mozshot.nemui.org/shot?{url}&quot; /&gt;" />
								</row>
								<row align="center">
									<label value="&label.trimReblogInfo;"/>
									<checkbox preference="trimReblogInfo" />
								</row>
								<separator class="groove-thin" width="1" style="margin: 1em 0 1em 0;" />
								<row align="center">
									<label value="&label.dataDir;"/>
									<textbox preference="dataDir" />
								</row>
								<row align="center" style="margin-top: -0.3em;">
									<spacer />
									<textbox readonly="true" value="&label.example; {ProfD}/tombloo" />
								</row>
							</rows>
						</grid>
					</tabpanel>
				</tabpanels>
			</tabbox>
		</vbox>
		
		<script><![CDATA[
		// chrome://tombloo/content/prefs.xul
		var env = Components.classes['@brasil.to/tombloo-service;1'].getService().wrappedJSObject;
		
		var prefpane = document.getElementsByTagName('prefpane')[0];
		function getField(name){
			return document.getElementsByAttribute('preference', name)[0];
		}
		
		function keyStringField(name, meta){
			var elm = getField(name);
			elm.addEventListener('keydown', function(e){
				var key = env.keyString(e);
				switch(key) {
				case 'TAB':
				case 'SHIFT + TAB':
					return;
					
				}
				
				env.cancel(e);
				elm.value = (key=='ESCAPE')? '' : 
					(meta)? key : key.split(' + ').pop();
				prefpane.userChangedValue(elm);
			}, true);
		}
		
		function mouseStringField(name, meta){
			var elm = getField(name);
			env.observeMouseShortcut(elm, function(e, key){
				elm.value = key;
				prefpane.userChangedValue(elm);
				return true;
			});
			elm.addEventListener('keydown', function(e){
				switch(env.keyString(e)) {
				case 'TAB':
				case 'SHIFT + TAB':
					return;
					
				case 'ESCAPE':
					elm.value = '';
					prefpane.userChangedValue(elm);
				}
				
				env.cancel(e);
			}, false);
		}
		
		mouseStringField('shortcutkey.checkAndPost');
		keyStringField('shortcutkey.quickPost.link', true);
		keyStringField('shortcutkey.quickPost.regular', true);
		keyStringField('accesskey.share', false);
		
		
		var tagProvider = document.getElementsByAttribute('preference', 'tagProvider')[0];
		var ms = env.models;
		for(var n in ms)
			if(ms[n].getUserTags)
				tagProvider.appendItem(n, n).setAttribute('src', ms[n].ICON);
		window.addEventListener('load', function(){
			// スクリプト実行時点でprefpaneのコンストラクターからvalueが先に与えられているため、
			// 後から追加したradioのチェックをつけることはできない。
			// またロード中はradiogroup._getRadioChildrenに反映されていないため、
			// valueの変更でチェックをつけることもできない。
			tagProvider.value = tagProvider.value;
		}, true)
		
		var models = document.getElementById('posters');
		var config = eval(env.getPref('postConfig'));
		env.values(env.models).forEach(function(model){
			if(!model.check)
				return;
			
			var conf = config[model.name] || {};
			var row = <row style="margin: 0.1em 0;">
				<hbox>
					<box>
						<image class="checkbox-icon" maxwidth="16" maxheight="16" src={model.ICON}/>
					</box>
					<label value={model.name} flex="1"/>
				</hbox>
			</row>;
			
			env.reduce(function(memo, type){
				var elm = memo.appendChild(model.check({
					type : type,
					pageUrl : {
						match: function(){
							return true
						}
					},
				})? <checkbox 
					type={type} model={model.name} 
					checked={conf[type] === true} disabled={conf[type] === ''}/> : <spacer/>);
				
				return memo;
			}, ['regular', 'photo', 'quote', 'link', 'video', 'conversation', 'reblog'], row)
			models.appendChild(env.convertToXULElement(row));
		});
		
		models.addEventListener('click', function(e){
			if(e.target.tagName != 'checkbox')
				return;
			
			if(e.target.disabled) {
				e.target.disabled = false;
				env.cancel(e);
			} else if(e.target.checked){
				e.target.disabled = true;
				e.target.checked = false;
			}
		}, true);
		
		// MacではOK/キャンセルが表示されないため無条件にunloadで保存する
		window.addEventListener(env.AppInfo.OS.indexOf('WIN') == 0? 'beforeaccept' : 'unload', function(e){
			var posters = {};
			env.$x('.//*[@model]', document, true).forEach(function(checkbox){
				var name = checkbox.getAttribute('model');
				if(!posters[name])
					posters[name] = {};
				posters[name][checkbox.getAttribute('type')] = 
					checkbox.disabled? '' : checkbox.checked;
			});
			
			env.setPref('postConfig', uneval(posters));
		}, true);
		
		// beforeaccept時点ではpreferenceが更新されていないためunloadを使う
		window.addEventListener('unload', function(e){
			// ショートカットキーの変更を反映させる
			env.reload();
		}, true);
		
		]]></script>
	</prefpane>
</prefwindow>
